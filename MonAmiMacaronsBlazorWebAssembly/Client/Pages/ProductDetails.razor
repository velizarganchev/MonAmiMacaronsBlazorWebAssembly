@page "/product/{productId:int}"

@inject IProductService ProductService
@inject ICartService CartService

@if (product == null)
{
    <span>@message</span>
}
else
{
    <section class="section-product">
        <div class="container grid grid--2--cols">
            <div class="gallery-product">
                <figure class="gallery-product-fig">
                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                    {
                        <img class="gallery-product-img"
                     alt="Photo of customer Dave Bryson"
                     src="@product.ImageUrl" />
                    }
                    else
                    {
                        <img class="gallery-product-img"
                     alt="Photo of customer Dave Bryson"
                     src="@product.Images[0]" />
                    }
                    <blockquote class="gallery-product-text">
                        @product.Description
                    </blockquote>
                    <p class="gallery-product-note">@product.Title</p>
                </figure>
            </div>
            <div class="product">
                <div class="product-item">
                    <div class="product-header">
                        <h2 class="product-title">@product.Title</h2>
                    </div>
                    <ul class="product-list">
                        @if (product.Variants != null && product.Variants.Count > 1)
                        {
                            <li class="product-list-item">
                                @if (GetSelectedVariant != null)
                                {
                                    <div class="product-price">$@GetSelectedVariant().Price</div>
                                }                                
                            </li>
                            <li class="product-list-item">
                                <div class="product-variants">
                                    <label for="variants">Variants</label>
                                    <select id="variants" @bind="currentTypeId">
                                        @foreach (var variant in product.Variants)
                                        {
                                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                        }              
                                    </select>
                                </div>
                            </li>
                        }
                        else{
                            <li>
                                <div class="product-price">$@GetSelectedVariant().Price</div>
                            </li>
                        }
                    </ul>
                    <div class="btn-container">
                        <button class="btn btn--form" @onclick="AddToCart">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    @*<div class="cardDetails-container">
        <div class="cardDetails">
            @if (!string.IsNullOrEmpty(product.ImageUrl))
            {
               <MudImage Src="@product.ImageUrl" Alt="Mony the dog" Width="150" Height="350" Elevation="25" Class="rounded-lg ma-4"/>
            }
            else
            {
               <MudCarousel Class="mud-width-full" ItemsSource="@product.Images" Style="height: 300px">
                   <ItemTemplate>
                        <MudImage  Src="@context.Data"></MudImage>
                   </ItemTemplate>
               </MudCarousel>
            }
            <div class="cardDetails-body">
                <h5 class="cardDetails-title">@product.Title</h5>
                <p class="cardDetails-text">@product.Description</p>
            </div>
        </div>
        <div class="cardDetails-varian-price">
            @if (product.Variants != null && product.Variants.Count > 1)
            {
                <div>
                    @if (GetSelectedVariant != null)
                    {
                        @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                        {
                            <h6 class="originalPrice">$@GetSelectedVariant().OriginalPrice</h6>
                        }
                        <h5 class="cardDetails-text" id="price">$@GetSelectedVariant().Price</h5>
                    }
                </div>
                <select class="cardDetails-body-variant" @bind="currentTypeId">
                    @foreach (var variant in product.Variants)
                    {
                        <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                    }
                </select>
            }
            else
            {
                <h5 class="cardDetails-text" id="price">$@GetSelectedVariant().Price</h5>
            }

            <button class="cart-details-btn" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
            </button>

        <div class="cardDetails-varian-price-btn">

        </div>
        </div>
    </div>*@
}


@code {
    private Product? product = null;

    private string message = string.Empty;

    private int currentTypeId = 1;

    [Parameter]
    public int productId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product....";

        var result = await ProductService.GetProduct(productId);

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;

            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(x => x.ProductTypeId == currentTypeId);

        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();

        var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                ProductTypeId = productVariant.ProductTypeId
            };

        await CartService.AddToCart(cartItem);
    }
}
