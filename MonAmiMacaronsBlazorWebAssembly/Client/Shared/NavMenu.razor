@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/"><img src="/img/heading-logo.png"/></a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link" aria-current="page" href="/product">Products</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Contact</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-user"></i>
          </a>
          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <AuthorizeView>
                  <Authorized>
                      <li><a class="dropdown-item" href="/profile">Profile</a></li>
                      <li><button class="dropdown-item" @onclick="Logout">Logout</button></li>
                  </Authorized>
                  <NotAuthorized>
                      <li><a class="dropdown-item" href="/register">Register</a></li>
                      <li><a class="dropdown-item" href="/login?returnUrl=@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)">Login</a></li>
                  </NotAuthorized>
              </AuthorizeView>
                        @*<li><hr class="dropdown-divider"></li>*@
          </ul>
        </li>
      </ul>
      <CartCounter/>
      <Search/>
    </div>
  </div>
</nav>

@code {

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}
